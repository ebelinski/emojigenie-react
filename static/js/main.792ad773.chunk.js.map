{"version":3,"sources":["Header.js","redux.js","emojiHelper.js","Search.js","Results.js","FooterAbout.js","FooterHelp.js","Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","role","aria-label","Component","actionTypes","emojis","filter","emoji","name","includes","applyModifications","allEmojis","initialState","query","filteredEmojis","filterEmojis","oldQuery","oldFilteredEmojis","emojisToSearchThrough","lowerCaseQuery","toLowerCase","keywords","Search","event","this","props","target","value","_this","placeholder","isMobile","type","ref","input","queryInput","onChange","handleChange","bind","focus","connect","state","dispatch","Results","innerText","copy","notify","show","background","text","emojiItems","map","dataTip","key","data-tip","onClick","handleEmojiClick","char","length","notify_default","react_tooltip_dist_default","FooterAbout","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","aboutIsHidden","href","FooterHelp","displayableContent","Footer","displayedContent","content","setState","displayContent","FooterAbout_FooterAbout","FooterHelp_FooterHelp","App","Header_Header","src_Search_0","src_Results_0","Footer_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","store","createStore","arguments","undefined","action","objectSpread","ReactDOM","render","es","App_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.792ad773.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <h1>EmojiGenie <span role=\"img\" aria-label=\"woman genie\">üßû‚Äç‚ôÄÔ∏è</span></h1>\n      </div>\n    );\n  }\n}","import allEmojis from './emoji.json';\nimport { applyModifications } from './emojiHelper';\n\nexport const actionTypes = {\n  QUERY: 'QUERY'\n}\n\nconst emojis = applyModifications(allEmojis);\n\nexport const initialState = {\n  emojis: emojis,\n  query: \"\",\n  filteredEmojis: emojis\n}\n\nfunction filterEmojis(allEmojis, query, oldQuery, oldFilteredEmojis) {\n  if (!query) return allEmojis;\n\n  const emojisToSearchThrough = query.includes(oldQuery)\n    ? oldFilteredEmojis \n    : allEmojis;\n\n  const lowerCaseQuery = query.toLowerCase();\n  const filteredEmojis = emojisToSearchThrough.filter(emoji => {\n    if (emoji.name.toLowerCase().includes(lowerCaseQuery)) return true;\n    if (emoji.keywords.toLowerCase().includes(lowerCaseQuery)) return true;\n    return false;\n  });\n\n  return filteredEmojis;\n}\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.QUERY:\n      return {\n        ...state,\n        query: action.query,\n        filteredEmojis: filterEmojis(\n          state.emojis, \n          action.query,\n          state.query,\n          state.filteredEmojis\n        )\n      }\n    default: return state;\n  }\n}\n","export const applyModifications = emojis => {\n  // Remove Emoji 11.0 emojis, too new for macOS\n  const emojisWithoutNewOnes = emojis.filter((emoji) => !emoji.name.includes(\"‚äõ\"));\n  return emojisWithoutNewOnes;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Search.css';\nimport { actionTypes } from './redux';\nimport { isMobile } from 'react-device-detect';\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n  filterEmojis: (query) => dispatch ({\n    type: actionTypes.QUERY,\n    query: query\n  })\n});\n\nclass Search extends Component {\n  handleChange(event) {\n    this.props.filterEmojis(event.target.value);\n  }\n\n  render() {\n    const placeholder = isMobile ? \"Find your dream emoji...\" \n                                 : \"Find the emoji of your dreams...\";\n\n    return (\n      <div className=\"Search\">\n        <input \n          placeholder={placeholder}\n          type=\"text\" \n          ref={(input) => { this.queryInput = input; }}\n          value={this.props.query}\n          onChange={this.handleChange.bind(this)} />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.queryInput.focus();\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Results.css';\nimport copy from 'clipboard-copy';\nimport ReactTooltip from 'react-tooltip';\nimport Notifications, {notify} from 'react-notify-toast';\nimport { isMobile } from 'react-device-detect';\n\nconst mapStateToProps = state => ({\n  filteredEmojis: state.filteredEmojis\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nclass Results extends Component {\n  handleEmojiClick(event) {\n    const emoji = event.target.innerText;\n    copy(emoji);\n    notify.show(\"Copied \" + emoji, \n                \"custom\",\n                2000,\n                { background: \"#666\", text: \"#fff\" });\n  }\n\n  render() {\n    const {filteredEmojis} = this.props;\n\n    var emojiItems = filteredEmojis.map((emoji) => {\n      var dataTip = emoji.name;\n      if (emoji.name.includes(\"‚äõ\")) {\n        dataTip += \" ‚Äî This is a new emoji that your browser may not be able to display!\";\n      }\n\n      return (\n        <div \n          className=\"emoji-container\"\n          key={emoji.name}>\n          <span \n            data-tip={dataTip}\n            role=\"img\"\n            aria-label={emoji.name}\n            className=\"emoji\"\n            onClick={this.handleEmojiClick.bind(this)}>\n            {emoji.char}\n          </span>\n        </div>)\n    });\n\n    if (emojiItems.length === 0) {\n      emojiItems = (<div className=\"no-results\">No emojis found.</div>);\n    }\n\n    return (\n      <div className=\"Results\">\n        <Notifications />\n        <div className=\"emojis\">{emojiItems}</div>\n        {isMobile ? null : <ReactTooltip />}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Results);\n","import React, { Component } from 'react';\nimport './Footer.css';\n\nexport default class FooterAbout extends Component {\n  constructor() {\n    super()\n    this.state = {\n      aboutIsHidden: true\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"togglable-content\">\n        <h2>About</h2>\n\n        <p>EmojiGenie was created in July 2018 by <a href=\"https://ebelinski.com\">me</a> because I like emojis, but I always had trouble finding the right one on my computer. It was launched on the greatest and most important holiday ever envisioned by humanity, World Emoji Day.</p>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './Footer.css';\n\nexport default class FooterHelp extends Component {\n  constructor() {\n    super()\n    this.state = {\n      aboutIsHidden: true\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"togglable-content\">\n        <h2>Help</h2>\n        \n        <p className=\"question\">I can't see some of these emojis!</p>\n\n        <p>The way emojis are displayed is heavily dependent on your operating system. I designed EmojiGenie work fairly well on macOS. Other operating systems may not have as many emojis.</p>\n        \n        <p className=\"question\">I expected a certain emoji to show up when I searched for it, but it didn't.</p>\n\n        <p>Please let me know what you searched and which emoji you expected, and I can add it! Contact me on <a href=\"https://twitter.com/EugeneBelinski\">Twitter</a> or via another method on <a href=\"https://ebelinski.com/\">my website</a>. Or if you are familiar with GitHub, submit a pull request to the <a href=\"https://github.com/ebelinski/emojigenie-react\">repo</a>!</p>\n        \n        <p className=\"question\">I found a problem not listed here.</p>\n\n        <p>Feel free to <a href=\"https://github.com/ebelinski/emojigenie-react/issues/new\">open an issue</a> in the GitHub repository! Please include your operating system, your browser, and how the problem can be replicated.</p>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './Footer.css';\nimport FooterAbout from './FooterAbout';\nimport FooterHelp from './FooterHelp';\n\nexport const displayableContent = {\n  about: 'about',\n  help: 'help'\n}\n\nexport default class Footer extends Component {\n  constructor() {\n    super()\n    this.state = {\n      displayedContent: null\n    }\n  }\n\n  displayContent(content) {\n    this.setState({displayedContent: content})\n  }\n\n  render() {\n    const { displayedContent } = this.state;\n    return (\n      <div className=\"Footer\">\n        <button onClick={this.displayContent.bind(this, displayableContent.about)}>About</button>\n        <span> | </span>\n        <button onClick={this.displayContent.bind(this, displayableContent.help)}>Help</button>\n        <span> | </span>\n        <a href=\"https://github.com/ebelinski/emojigenie-react\">Source</a>\n        <span> | </span>\n        <a href=\"https://github.com/ebelinski/emojigenie-react/issues/new\">Suggestions</a>\n        <span> | </span>\n        Created and maintained by <a href=\"https://twitter.com/EugeneBelinski\">Eugene <span role=\"img\" aria-label=\"man technologist\">üë®üèª‚Äçüíª</span></a>\n\n        {displayedContent === displayableContent.about ? <FooterAbout /> : null}\n        {displayedContent === displayableContent.help ? <FooterHelp /> : null}\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Search from './Search';\nimport Results from './Results';\nimport Footer from './Footer';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Search />\n        <Results />\n        <Footer />\n      </div>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\nimport { reducer, initialState } from './redux';\nimport 'normalize.css';\n\nconst store = createStore(reducer, initialState);\n\nconst AppWithStore = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<AppWithStore />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}